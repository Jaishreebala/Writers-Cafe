[{"/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/index.js":"1","/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/reportWebVitals.js":"2","/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/App.js":"3","/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/components/Error.js":"4","/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/components/Nav.js":"5","/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/pages/Register.js":"6","/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/pages/Login.js":"7","/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/pages/Read.js":"8","/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/pages/Home.js":"9","/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/pages/Resetpassword.js":"10","/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/components/Messages.js":"11","/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/components/LoggedIn.js":"12","/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/components/NotLoggedIn.js":"13","/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/pages/Profile.js":"14","/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/components/Card.js":"15","/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/pages/ReadWrittenWork.js":"16"},{"size":571,"mtime":1607148553674,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1607142119077,"results":"19","hashOfConfig":"18"},{"size":1716,"mtime":1607310081381,"results":"20","hashOfConfig":"18"},{"size":165,"mtime":1607178307441,"results":"21","hashOfConfig":"18"},{"size":698,"mtime":1607384811862,"results":"22","hashOfConfig":"18"},{"size":3360,"mtime":1607207232908,"results":"23","hashOfConfig":"18"},{"size":3643,"mtime":1607449442636,"results":"24","hashOfConfig":"18"},{"size":6910,"mtime":1607386063252,"results":"25","hashOfConfig":"18"},{"size":138,"mtime":1607148343954,"results":"26","hashOfConfig":"18"},{"size":2239,"mtime":1607207264367,"results":"27","hashOfConfig":"18"},{"size":178,"mtime":1607190184044,"results":"28","hashOfConfig":"18"},{"size":852,"mtime":1607281988724,"results":"29","hashOfConfig":"18"},{"size":628,"mtime":1607204091016,"results":"30","hashOfConfig":"18"},{"size":824,"mtime":1607267058808,"results":"31","hashOfConfig":"18"},{"size":1316,"mtime":1607385938567,"results":"32","hashOfConfig":"18"},{"size":7871,"mtime":1607466581105,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"5x5l42",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/index.js",[],["68","69"],"/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/reportWebVitals.js",[],"/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/App.js",[],"/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/components/Error.js",[],"/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/components/Nav.js",[],"/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/pages/Register.js",[],"/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/pages/Login.js",[],"/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/pages/Read.js",["70"],"import React, { useState, useEffect } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport Card from '../components/Card';\nimport arrow from '../images/arrow.svg'\nimport cross from '../images/cross.svg'\nfunction Read({ isLoggedIn }) {\n    const [isGenreOpen, setIsGenreOpen] = useState(false);\n    const [isWorkOpen, setIsWorkOpen] = useState(false);\n    const [writtenWorkData, setWrittenWorkData] = useState([]);\n    const [selectedGenre, setSelectedGenre] = useState([]);\n    const [selectedWrittenwork, setSelectedWrittenwork] = useState([]);\n    const [query, setQuery] = useState(`api/v1/writtenWork`);\n    useEffect(() => {\n        readWrittenWorkHandler();\n    }, [query])\n    const readWrittenWorkHandler = async () => {\n        try {\n            const response = await fetch(query)\n            const data = await response.json();\n            setWrittenWorkData(data.data);\n        } catch (err) {\n            console.log(err)\n        }\n\n    }\n    const selectedGenreHandler = async (e) => {\n        let push = true;\n        selectedGenre.forEach(genre => {\n            if (genre === e.target.textContent) {\n                push = false;\n            }\n        })\n        if (push) {\n            selectedGenre.push(e.target.textContent)\n            setSelectedGenre(selectedGenre)\n            if (!selectedWrittenwork.length) {\n                setQuery(`api/v1/writtenWork?genre[in]=${selectedGenre}`);\n            }\n            else {\n                setQuery(`api/v1/writtenWork?genre[in]=${selectedGenre}&workType[in]=${selectedWrittenwork}`)\n            }\n        }\n    }\n    const selectedWrittenworkHandler = async (e) => {\n        let push = true;\n        selectedWrittenwork.forEach(workType => {\n            if (workType === e.target.textContent) {\n                push = false;\n            }\n        })\n        if (push) {\n            selectedWrittenwork.push(e.target.textContent)\n            setSelectedWrittenwork(selectedWrittenwork)\n        }\n        if (!selectedGenre.length) {\n            setQuery(`api/v1/writtenWork?workType[in]=${selectedWrittenwork}`);\n        }\n        else {\n            setQuery(`api/v1/writtenWork?genre[in]=${selectedGenre}&workType[in]=${selectedWrittenwork}`)\n        }\n    }\n    const removeWrittenWorkHandler = (idx) => {\n        let newSelectedWritten = selectedWrittenwork.filter((workType, id) => id !== idx);\n        setSelectedWrittenwork(newSelectedWritten);\n        updateQuery(newSelectedWritten, selectedGenre);\n    }\n    const removeGenreHandler = (e) => {\n        let newSelectedGenre = selectedGenre.filter(genre => genre !== e.target.textContent.trim());\n        setSelectedGenre(newSelectedGenre);\n        updateQuery(selectedWrittenwork, newSelectedGenre);\n    }\n    function updateQuery(selectedTagList, selectedGenreList) {\n        if (!selectedGenreList.length && !selectedTagList.length) {\n            setQuery(`api/v1/writtenWork`);\n        }\n        else if (!selectedGenreList.length && selectedTagList.length > 0) {\n            setQuery(`api/v1/writtenWork?workType[in]=${selectedTagList}`)\n        }\n        else if (!selectedTagList.length && selectedGenreList.length > 0) {\n            setQuery(`api/v1/writtenWork?genre[in]=${selectedGenreList}`);\n        }\n        else {\n            setQuery(`api/v1/writtenWork?genre[in]=${selectedGenreList}&workType[in]=${selectedTagList}`)\n        }\n    }\n    return (\n        <div>\n            {!isLoggedIn ? <Redirect to=\"/read\" /> : \"\"}\n            <div className=\"header\">\n                <div className=\"section\">\n                    <div className=\"tagsArea\">\n                        {selectedWrittenwork.map((workType, idx) => <div key={workType} onClick={() => removeWrittenWorkHandler(idx)} className=\"tags\">{workType} <img src={cross} alt=\"Cancel\" /> </div>)}\n                        {selectedGenre.map(genre => <div key={genre} onClick={removeGenreHandler} className=\"tags\">{genre} <img src={cross} alt=\"Cancel\" /> </div>)}\n                    </div>\n                </div>\n                <div className=\"section\">\n                    <div className=\"dropdown\">\n                        <div className=\"title\" onClick={() => {\n                            setIsGenreOpen(!isGenreOpen);\n                            setIsWorkOpen(false)\n                        }}>Genre\n                        <img src={arrow} alt=\"arrow\" className={isGenreOpen ? \"rotateDown\" : \"\"} />\n                        </div>\n                        <ul onClick={selectedGenreHandler} className={`options ${isGenreOpen ? \"expand\" : \"\"}`}>\n                            <li>Fantasy</li>\n                            <li>Adventure</li>\n                            <li>Romance</li>\n                            <li>Contemporary</li>\n                            <li>Dystopian</li>\n                            <li>Mystery</li>\n                            <li>Horror</li>\n                            <li>Thriller</li>\n                            <li>Paranormal</li>\n                            <li>Historical fiction</li>\n                            <li>Science Fiction</li>\n                            <li>Memoir</li>\n                            <li>Self-help / Personal</li>\n                            <li>Motivational</li>\n                            <li>Guide / How-to</li>\n                            <li>Humor</li>\n                            <li>Children’s</li>\n                            <li>Other</li>\n\n                        </ul>\n                    </div>\n                    <div className=\"dropdown\">\n                        <div className=\"title\" onClick={() => {\n                            setIsWorkOpen(!isWorkOpen);\n                            setIsGenreOpen(false);\n                        }}>Work Type\n                        <img src={arrow} alt=\"arrow\" className={isWorkOpen ? \"rotateDown\" : \"\"} />\n                        </div>\n                        <ul onClick={selectedWrittenworkHandler} className={`options ${isWorkOpen ? \"expand\" : \"\"}`}>\n                            <li>Poetry</li>\n                            <li>Short Story</li>\n                            <li>Novel</li>\n                            <li>Journal/Diary</li>\n                            <li>Quotes</li>\n                        </ul>\n                    </div>\n\n                </div>\n            </div>\n            <div className=\"cardsSection\">\n                {\n                    writtenWorkData.map(writtenWork => { return <Card key={writtenWork._id} id={writtenWork._id} name={writtenWork.name} author={`${writtenWork.author.firstName} ${writtenWork.author.lastName}`} photo={writtenWork.photo} description={writtenWork.description} workType={writtenWork.workType} genre={writtenWork.genre} nsfw={writtenWork.nsfwContent} violence={writtenWork.violence} triggerWarning={writtenWork.suicideOrTriggerWarning} /> })\n                }\n            </div>\n        </div >\n    )\n}\n\nexport default Read","/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/pages/Home.js",[],"/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/pages/Resetpassword.js",[],"/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/components/Messages.js",[],"/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/components/LoggedIn.js",[],"/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/components/NotLoggedIn.js",[],"/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/pages/Profile.js",[],"/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/components/Card.js",[],"/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/pages/ReadWrittenWork.js",["71","72","73"],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":15,"column":8,"nodeType":"80","endLine":15,"endColumn":15,"suggestions":"81"},{"ruleId":"78","severity":1,"message":"82","line":24,"column":8,"nodeType":"80","endLine":24,"endColumn":15,"suggestions":"83"},{"ruleId":"84","severity":1,"message":"85","line":158,"column":71,"nodeType":"86","messageId":"87","endLine":158,"endColumn":73},{"ruleId":"88","severity":1,"message":"89","line":186,"column":98,"nodeType":"90","messageId":"91","endLine":186,"endColumn":100},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'readWrittenWorkHandler'. Either include it or remove the dependency array.","ArrayExpression",["94"],"React Hook useEffect has a missing dependency: 'loadWrittenWork'. Either include it or remove the dependency array.",["95"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},"Update the dependencies array to be: [query, readWrittenWorkHandler]",{"range":"100","text":"101"},"Update the dependencies array to be: [loadWrittenWork, query]",{"range":"102","text":"103"},[683,690],"[query, readWrittenWorkHandler]",[925,932],"[loadWrittenWork, query]"]