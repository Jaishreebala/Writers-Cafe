[{"/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/index.js":"1","/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/reportWebVitals.js":"2","/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/App.js":"3","/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/components/Error.js":"4","/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/components/Nav.js":"5","/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/pages/Register.js":"6","/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/pages/Login.js":"7","/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/pages/Read.js":"8","/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/pages/Home.js":"9","/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/pages/Resetpassword.js":"10","/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/components/Messages.js":"11","/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/components/LoggedIn.js":"12","/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/components/NotLoggedIn.js":"13","/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/pages/Profile.js":"14","/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/components/Card.js":"15","/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/pages/ReadWrittenWork.js":"16","/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/components/CardAuthor.js":"17","/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/pages/EditWrittenwork.js":"18","/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/pages/CreateWrittenwork.js":"19"},{"size":571,"mtime":1607148553674,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1607142119077,"results":"22","hashOfConfig":"21"},{"size":2130,"mtime":1607641506218,"results":"23","hashOfConfig":"21"},{"size":165,"mtime":1607178307441,"results":"24","hashOfConfig":"21"},{"size":698,"mtime":1607384811862,"results":"25","hashOfConfig":"21"},{"size":3360,"mtime":1607207232908,"results":"26","hashOfConfig":"21"},{"size":3535,"mtime":1607820781834,"results":"27","hashOfConfig":"21"},{"size":6853,"mtime":1607808760107,"results":"28","hashOfConfig":"21"},{"size":616,"mtime":1607831392053,"results":"29","hashOfConfig":"21"},{"size":2128,"mtime":1607820826844,"results":"30","hashOfConfig":"21"},{"size":178,"mtime":1607190184044,"results":"31","hashOfConfig":"21"},{"size":852,"mtime":1607281988724,"results":"32","hashOfConfig":"21"},{"size":628,"mtime":1607204091016,"results":"33","hashOfConfig":"21"},{"size":4680,"mtime":1607820597480,"results":"34","hashOfConfig":"21"},{"size":1337,"mtime":1607541427858,"results":"35","hashOfConfig":"21"},{"size":8186,"mtime":1607612237225,"results":"36","hashOfConfig":"21"},{"size":3811,"mtime":1607820648272,"results":"37","hashOfConfig":"21"},{"size":9470,"mtime":1607830538973,"results":"38","hashOfConfig":"21"},{"size":7615,"mtime":1607820618796,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"5x5l42",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/index.js",[],["80","81"],"/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/reportWebVitals.js",[],"/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/App.js",[],"/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/components/Error.js",[],"/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/components/Nav.js",[],"/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/pages/Register.js",[],"/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/pages/Login.js",[],"/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/pages/Read.js",["82","83"],"/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/pages/Home.js",["84"],"/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/pages/Resetpassword.js",[],"/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/components/Messages.js",[],"/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/components/LoggedIn.js",[],"/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/components/NotLoggedIn.js",[],"/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/pages/Profile.js",["85","86","87","88"],"/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/components/Card.js",[],"/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/pages/ReadWrittenWork.js",["89"],"import React, { useEffect, useState, useRef } from 'react'\nimport { useParams } from 'react-router';\nimport profilePlaceholder from '../images/profilePlaceholder.svg';\nimport expand from '../images/expand.svg';\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\nimport emptyStar from '../images/empty_star.svg';\nimport filledStar from '../images/filled_star.svg';\nimport about from '../images/about.svg';\nimport Error from '../components/Error';\nimport { useHistory } from 'react-router-dom'\n\n\nfunction ReadWrittenWork({ isLoggedIn }) {\n    const { id } = useParams();\n    const history = useHistory()\n\n    const [writtenWorkData, setWrittenWorkData] = useState([]);\n    const [query, setQuery] = useState(`/api/v1/writtenWork/${id}`);\n    const [userRating, setUserRating] = useState([0, 0, 0, 0, 0]);\n    const [errors, setErrors] = useState(\"\");\n\n    const handle = useFullScreenHandle();\n    useEffect(() => {\n        loadWrittenWork();\n    }, [query])\n    const commentRef = useRef();\n    const loadWrittenWork = async () => {\n        try {\n            const response = await fetch(query)\n            const data = await response.json();\n            setWrittenWorkData(data.data);\n        } catch (err) {\n            console.log(err)\n        }\n    }\n    const submitCommentHandler = async () => {\n        if (isLoggedIn) {\n            if (commentRef.current.value.length) {\n                try {\n                    const response = await fetch(`/api/v1/writtenWork/${id}/comments`, {\n                        method: \"POST\",\n                        body: JSON.stringify({\n                            comment: commentRef.current.value\n                        }),\n                        headers: {\n                            \"Content-type\": \"application/json; charset=UTF-8\"\n                        }\n                    })\n                    const data = await response.json();\n                    setErrors(\"\");\n                    if (data.success) {\n                        setQuery(query)\n                    }\n                    else {\n                        setErrors(data.error)\n                    }\n\n                } catch (err) {\n                    setErrors(err)\n                }\n            }\n            else {\n                setErrors(\"Comments can't be empty\")\n            }\n            commentRef.current.value = \"\"\n        }\n        else {\n            history.push(\"/login\");\n        }\n    }\n    const submitReviewHandler = async (rating) => {\n        if (isLoggedIn) {\n            try {\n                const response = await fetch(`/api/v1/writtenWork/${id}/comments`, {\n                    method: \"POST\",\n                    body: JSON.stringify({\n                        rating: rating\n                    }),\n                    headers: {\n                        \"Content-type\": \"application/json; charset=UTF-8\"\n                    }\n                })\n                const data = await response.json();\n                if (data.success) {\n                    // setQuery(`/api/v1/writtenWork/${}`)\n                }\n            } catch (err) {\n                console.log(err)\n            }\n        } else {\n            history.push(\"/login\");\n        }\n    }\n    const mouseOverStar = (index) => {\n        for (let i = 0; i < 5; i++) {\n            if (i <= index) {\n                userRating[i] = 1;\n            }\n            else {\n                userRating[i] = 0;\n            }\n        }\n        setUserRating(userRating)\n    }\n\n    const starRenderer = () => {\n        let ratingRenderer = [];\n        for (let i = 0; i < 5; i++) {\n            if (i < Math.round(parseInt(writtenWorkData.averageRating))) {\n                ratingRenderer.push(<img key={i} src={filledStar} alt=\"filled star\" />)\n            }\n            else {\n                ratingRenderer.push(<img key={i} src={emptyStar} alt=\"empty star\" />)\n            }\n        }\n        return ratingRenderer;\n    }\n    return (\n        <>\n            {\n                writtenWorkData.author && writtenWorkData.genre && writtenWorkData.comments && < div className=\"readWrittenWork\">\n                    <div className=\"readSection\">\n                        <div className=\"heading\">\n                            <h1>{writtenWorkData.name}</h1>\n                            <div className=\"options\">\n                                <div onClick={handle.enter} className=\"fullscreen\">\n                                    <img src={expand} alt=\"expand\" /> Fullscreen\n                                </div>\n                                <div onClick={handle.enter} className=\"fullscreen\">\n                                    <img src={about} alt=\"expand\" /> About\n                                </div>\n                            </div>\n                        </div>\n                        <FullScreen handle={handle} style={{ color: '#fff' }}>\n                            <textarea className=\"readArea\" readOnly>\n                                {writtenWorkData.content}\n                            </textarea>\n                        </FullScreen>\n                    </div>\n                    <div className=\"description\">\n                        <div className=\"padding\">\n                            <h1>{writtenWorkData.name}</h1>\n                            <h2>{writtenWorkData.author.firstName} {writtenWorkData.author.lastName}</h2>\n                            <div className=\"tagsArea\">\n                                <div className=\"tags\">{writtenWorkData.workType}</div>\n                                {writtenWorkData.genre.map(gen => <div key={gen} className=\"tags\">{gen}</div>)}\n                            </div>\n                            <p>{writtenWorkData.description} </p>\n                            <div className=\"rating\">\n                                <div className=\"stars\">\n                                    {starRenderer()}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"comments\">\n\n                            <div className=\"padding\">\n                                <h1>Comments</h1>\n                                {writtenWorkData.comments.map(comment => {\n                                    if (comment.comment) {\n                                        return <div key={comment._id} className=\"comment\">\n                                            <div className=\"commentName\">\n                                                <img src={profilePlaceholder} alt=\"Profile\" />\n                                                {comment.user.firstName} {comment.user.lastName}\n                                            </div>\n                                            <div className=\"commentDesc\">\n                                                {comment.comment}\n                                            </div>\n                                        </div>\n                                    }\n                                    return \"\";\n                                }\n                                )}\n                            </div>\n                        </div>\n                        <div className=\"userInputSection\">\n                            <Error error={errors} />\n                            <div className=\"borderInput\">\n                                <input type=\"text\" placeholder=\"Leave A Comment\" ref={commentRef} />\n                                <div onClick={submitCommentHandler}>Post</div>\n                            </div>\n\n                            <div className=\"inputRating\">\n                                <span>Leave A Rating:</span>\n\n                                {userRating.map((rating, i) =>\n                                    <img onClick={() => submitReviewHandler(i + 1)}\n                                        onMouseOver={() => mouseOverStar(i)} key={i} src={rating ? filledStar : emptyStar}\n                                        alt=\"empty star\" />)\n                                }\n                            </div>\n                        </div>\n\n                    </div>\n                </div>}\n        </>\n    )\n}\n\n\nexport default ReadWrittenWork\n","/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/components/CardAuthor.js",["90"],"/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/pages/EditWrittenwork.js",["91","92","93","94","95","96","97","98","99"],"/Users/jaishreebala/Desktop/Writers Cafe Test/Writers-Cafe-API/client/src/pages/CreateWrittenwork.js",["100"],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":2,"column":10,"nodeType":"107","messageId":"108","endLine":2,"endColumn":18},{"ruleId":"109","severity":1,"message":"110","line":15,"column":8,"nodeType":"111","endLine":15,"endColumn":15,"suggestions":"112"},{"ruleId":"105","severity":1,"message":"113","line":3,"column":10,"nodeType":"107","messageId":"108","endLine":3,"endColumn":14},{"ruleId":"105","severity":1,"message":"114","line":1,"column":38,"nodeType":"107","messageId":"108","endLine":1,"endColumn":44},{"ruleId":"105","severity":1,"message":"115","line":8,"column":19,"nodeType":"107","messageId":"108","endLine":8,"endColumn":27},{"ruleId":"105","severity":1,"message":"116","line":10,"column":12,"nodeType":"107","messageId":"108","endLine":10,"endColumn":23},{"ruleId":"105","severity":1,"message":"117","line":10,"column":25,"nodeType":"107","messageId":"108","endLine":10,"endColumn":39},{"ruleId":"109","severity":1,"message":"118","line":25,"column":8,"nodeType":"111","endLine":25,"endColumn":15,"suggestions":"119"},{"ruleId":"105","severity":1,"message":"120","line":17,"column":19,"nodeType":"107","messageId":"108","endLine":17,"endColumn":23},{"ruleId":"105","severity":1,"message":"115","line":15,"column":19,"nodeType":"107","messageId":"108","endLine":15,"endColumn":27},{"ruleId":"105","severity":1,"message":"121","line":19,"column":22,"nodeType":"107","messageId":"108","endLine":19,"endColumn":33},{"ruleId":"122","severity":1,"message":"123","line":28,"column":26,"nodeType":"124","messageId":"125","endLine":28,"endColumn":28},{"ruleId":"109","severity":1,"message":"126","line":46,"column":8,"nodeType":"111","endLine":46,"endColumn":14,"suggestions":"127"},{"ruleId":"122","severity":1,"message":"123","line":49,"column":30,"nodeType":"124","messageId":"125","endLine":49,"endColumn":32},{"ruleId":"109","severity":1,"message":"128","line":67,"column":8,"nodeType":"111","endLine":67,"endColumn":18,"suggestions":"129"},{"ruleId":"105","severity":1,"message":"130","line":87,"column":32,"nodeType":"107","messageId":"108","endLine":87,"endColumn":44},{"ruleId":"105","severity":1,"message":"131","line":90,"column":23,"nodeType":"107","messageId":"108","endLine":90,"endColumn":35},{"ruleId":"109","severity":1,"message":"118","line":110,"column":8,"nodeType":"111","endLine":110,"endColumn":25,"suggestions":"132"},{"ruleId":"105","severity":1,"message":"133","line":14,"column":11,"nodeType":"107","messageId":"108","endLine":14,"endColumn":21},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'readWrittenWorkHandler'. Either include it or remove the dependency array.","ArrayExpression",["136"],"'Link' is defined but never used.","'useRef' is defined but never used.","'setQuery' is assigned a value but never used.","'editAddress' is assigned a value but never used.","'setEditAddress' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadWrittenWork'. Either include it or remove the dependency array.",["137"],"'data' is assigned a value but never used.","'setRerender' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'id' and 'lastText'. Either include them or remove the dependency array.",["138"],"React Hook useEffect has missing dependencies: 'id' and 'lastDescText'. Either include them or remove the dependency array.",["139"],"'yourFunction' is defined but never used.","'timerForDesc' is assigned a value but never used.",["140"],"'visibility' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},"Update the dependencies array to be: [query, readWrittenWorkHandler]",{"range":"151","text":"152"},"Update the dependencies array to be: [loadWrittenWork, query]",{"range":"153","text":"154"},"Update the dependencies array to be: [id, lastText, text]",{"range":"155","text":"156"},"Update the dependencies array to be: [descText, id, lastDescText]",{"range":"157","text":"158"},"Update the dependencies array to be: [loadWrittenWork, query, rerender]",{"range":"159","text":"160"},[683,690],"[query, readWrittenWorkHandler]",[966,973],"[loadWrittenWork, query]",[1944,1950],"[id, lastText, text]",[2700,2710],"[descText, id, lastDescText]",[4082,4099],"[loadWrittenWork, query, rerender]"]