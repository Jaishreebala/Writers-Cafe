{"version":3,"sources":["components/Error.js","components/Messages.js","images/logoNoBg.svg","pages/Login.js","pages/Register.js","pages/Home.js","uploads/writtenWorks/placeholder-story.svg.svg","components/Card.js","images/arrow.svg","images/cross.svg","pages/Read.js","images/profilePlaceholder.svg","images/placeholder_writtenwork.svg","images/empty_star.svg","images/filled_star.svg","images/edit.svg","images/delete.svg","components/CardAuthor.js","images/plus.svg","pages/Profile.js","images/expand.svg","images/about.svg","pages/ReadWrittenWork.js","images/speech.svg","pages/EditWrittenwork.js","pages/CreateWrittenwork.js","pages/Resetpassword.js","components/NotLoggedIn.js","components/LoggedIn.js","images/logoLightBg.svg","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Error","error","className","Messages","message","Login","isLoggedIn","setIsLoggedIn","useState","errors","setErrors","setMessage","inputEmail","useRef","inputPassword","loginHandler","e","a","preventDefault","fetch","method","body","JSON","stringify","email","current","value","password","headers","response","json","data","success","console","log","forgotPasswordHandler","to","src","logoNoBg","alt","ref","type","name","required","onClick","Register","inputFirstName","inputLastName","firstName","lastName","Home","Card","id","author","description","workType","genre","triggerWarning","nsfw","violence","storyImage","map","gen","Read","isGenreOpen","setIsGenreOpen","isWorkOpen","setIsWorkOpen","writtenWorkData","setWrittenWorkData","selectedGenre","setSelectedGenre","selectedWrittenwork","setSelectedWrittenwork","query","setQuery","useEffect","readWrittenWorkHandler","selectedGenreHandler","push","forEach","target","textContent","length","selectedWrittenworkHandler","removeGenreHandler","newSelectedGenre","filter","trim","updateQuery","selectedTagList","selectedGenreList","idx","newSelectedWritten","removeWrittenWorkHandler","cross","arrow","writtenWork","_id","photo","nsfwContent","suicideOrTriggerWarning","CardAuthor","rerender","setRerender","view","rating","isDeleteRequested","setIsDeleteRequested","deleteWrittenWorkHanlder","tooltip","editIcon","deleteIcon","ratingRenderer","i","Math","round","parseInt","filledStar","emptyStar","starRenderer","Profile","profileData","setProfileData","addressFields","setAddressFields","profileLocation","setProfileLocation","showAddressPopup","setShowAddressPopup","nearbyAuthors","setNearbyAuthors","miles","addressLine","addressCountry","addressCity","addressZipcode","getMyProfileHandler","location","addAddressHandler","address","findAuthorsNearbyHandler","zipcode","writtenworks","formattedAddress","min","step","onChange","users","user","authorImage","placeholder","add","averageRating","ReadWrittenWork","useParams","history","useHistory","userRating","setUserRating","isDescriptionOpen","setIsDescriptionOpen","handle","useFullScreenHandle","loadWrittenWork","commentRef","submitCommentHandler","comment","submitReviewHandler","comments","enter","expand","about","style","color","readOnly","content","profilePlaceholder","onMouseOver","index","mouseOverStar","EditWrittenwork","isDescFocus","setIsDescFocus","isListening","setIsListening","lastText","setLastText","text","setText","lastDescText","setLastDescText","descText","setDescText","isVRSupported","setIsVRSupported","textRef","descRef","timer","setTimeout","clearTimeout","timerForDesc","useSpeechRecognition","transcript","resetTranscript","SpeechRecognition","browserSupportsSpeechRecognition","startListening","continuous","stopListening","speech","contentEditable","onInput","onBlur","onFocus","CreateWrittenwork","setView","triggerwarning","submitFormHandler","genreArray","split","checked","replace","class","Resetpassword","resettoken","resetHandler","NotLoggedIn","pathname","LoggedIn","logOutHandler","Nav","useLocation","logoLightBg","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ae64a0e.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Error({ error }) {\n    return (\n        <div className=\"error\">\n            {error}\n        </div>\n    )\n}\n\nexport default Error\n","import React from 'react'\n\nfunction Messages({ message }) {\n    return (\n        <div className=\"messages\">\n            {message}\n        </div>\n    )\n}\n\nexport default Messages\n","export default __webpack_public_path__ + \"static/media/logoNoBg.08379a9e.svg\";","import React, { useRef, useState } from 'react'\nimport Error from '../components/Error';\nimport Messages from '../components/Messages';\nimport { Link, Redirect } from 'react-router-dom'\nimport logoNoBg from '../images/logoNoBg.svg';\n\nfunction Login({ isLoggedIn, setIsLoggedIn }) {\n    const [errors, setErrors] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    const inputEmail = useRef();\n    const inputPassword = useRef();\n    const loginHandler = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await fetch(\"/api/v1/auth/login\", {\n                method: \"POST\",\n                body: JSON.stringify({\n                    email: inputEmail.current.value,\n                    password: inputPassword.current.value\n                }),\n                headers: {\n                    \"Content-type\": \"application/json; charset=UTF-8\"\n                }\n            })\n            const data = await response.json();\n            if (data.success) {\n                setErrors(\"\");\n                setIsLoggedIn(true);\n            }\n            else {\n                setIsLoggedIn(false);\n                setErrors(data.error);\n            }\n        } catch (err) {\n            console.log(err)\n        }\n\n    }\n    const forgotPasswordHandler = async (e) => {\n        e.preventDefault();\n        setIsLoggedIn(false);\n        try {\n            const response = await fetch(\"/api/v1/auth/forgotpassword\", {\n                method: \"POST\",\n                body: JSON.stringify({\n                    email: inputEmail.current.value\n                }),\n                headers: {\n                    \"Content-type\": \"application/json; charset=UTF-8\"\n                }\n            })\n            const data = await response.json();\n            if (data.success) {\n                setMessage(\"A reset password link has been successfully sent to your email account.\");\n                setErrors(\"\")\n            }\n            else {\n                setMessage(\"\")\n                setErrors(data.error);\n            }\n        } catch (err) {\n            console.log(err)\n        }\n\n    }\n\n    return (\n        <div className=\"login\">\n            {isLoggedIn ? <Redirect to=\"/profile\" /> : \"\"}\n            <img src={logoNoBg} alt=\"Main Logo\" />\n            <form className=\"login-form\">\n                <h1>Login To Your Writer’s Cafe Account</h1>\n                <Error error={errors} />\n                <div className=\"searchInput\">\n                    <input ref={inputEmail} type=\"text\" name=\"email\" required />\n                    <label className=\"label-name\"> <span className=\"content-name\">\n                        Email\n                    </span>\n                    </label>\n                </div>\n                <div className=\"searchInput\">\n                    <input ref={inputPassword} type=\"password\" name=\"password\" required />\n                    <label className=\"label-name\"> <span className=\"content-name\">\n                        Password\n                    </span>\n                    </label>\n                </div>\n                <Messages message={message} />\n                <div onClick={forgotPasswordHandler} className=\"links\">Forgot Password?</div>\n                <button onClick={loginHandler} className=\"button\">Login</button>\n                <div className=\"links borderTop\">Don't Have An Accout? <b>\n                    <Link to=\"/register\">Sign Up</Link>\n                </b></div>\n            </form>\n        </div>\n    )\n}\n\n\nexport default Login\n","import React, { useRef, useState } from 'react'\nimport Error from '../components/Error';\nimport { Link, Redirect } from 'react-router-dom';\nimport logoNoBg from '../images/logoNoBg.svg';\nfunction Register({ isLoggedIn, setIsLoggedIn }) {\n    const [errors, setErrors] = useState(\"\");\n    const inputEmail = useRef();\n    const inputPassword = useRef();\n    const inputFirstName = useRef();\n    const inputLastName = useRef();\n    const loginHandler = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await fetch(\"/api/v1/auth/register\", {\n                method: \"POST\",\n                body: JSON.stringify({\n                    firstName: inputFirstName.current.value,\n                    lastName: inputLastName.current.value,\n                    email: inputEmail.current.value,\n                    password: inputPassword.current.value\n                }),\n                headers: {\n                    \"Content-type\": \"application/json; charset=UTF-8\"\n                }\n            })\n            const data = await response.json();\n            if (data.success) {\n                setErrors(\"\");\n                setIsLoggedIn(true);\n            }\n            else {\n                setIsLoggedIn(false);\n                setErrors(data.error);\n            }\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    return (\n        <div className=\"login\">\n            {isLoggedIn ? <Redirect to=\"/profile\" /> : \"\"}\n            <img src={logoNoBg} alt=\"Main Logo\" />\n            <form className=\"login-form\">\n                <h1>Create Your Writer’s Cafe Account</h1>\n                <Error error={errors} />\n                <div className=\"searchInput\">\n                    <input ref={inputFirstName} type=\"text\" name=\"firstName\" required />\n                    <label className=\"label-name\"> <span className=\"content-name\">\n                        First Name\n                    </span>\n                    </label>\n                </div>\n                <div className=\"searchInput\">\n                    <input ref={inputLastName} type=\"text\" name=\"lastName\" required />\n                    <label className=\"label-name\"> <span className=\"content-name\">\n                        Last Name\n                    </span>\n                    </label>\n                </div>\n                <div className=\"searchInput\">\n                    <input ref={inputEmail} type=\"text\" name=\"email\" required />\n                    <label className=\"label-name\"> <span className=\"content-name\">\n                        Email\n                    </span>\n                    </label>\n                </div>\n                <div className=\"searchInput\">\n                    <input ref={inputPassword} type=\"password\" name=\"password\" required />\n                    <label className=\"label-name\"> <span className=\"content-name\">\n                        Password\n                    </span>\n                    </label>\n                </div>\n                <button onClick={loginHandler} className=\"button marginTop\">Register</button>\n                <div className=\"links borderTop\">Already Have An Accout? <b>\n                    <Link to=\"/login\">Log In</Link>\n                    {/* <a href=\"/login\">Log In</a> */}\n                </b></div>\n            </form>\n        </div>\n    )\n}\n\n\nexport default Register\n","import React from 'react'\nimport logoNoBg from '../images/logoNoBg.svg';\nimport { Link } from 'react-router-dom'\n\nfunction Home() {\n    return (\n        <div className=\"login home\">\n            <section className=\"main\">\n                <img src={logoNoBg} alt=\"Main Logo\" />\n                <div className=\"description\">\n                    <h1>Get your creative juices flowing by joining Writer’s Cafè.</h1>\n                    <div className=\"buttons\">\n                        <Link to=\"/read\"><div className=\"button\">Start Reading</div></Link>\n                        <Link to=\"/register\"><div className=\"button\">Sign Up Now</div></Link>\n                    </div>\n                </div>\n            </section>\n            <section className=\"features\">\n                <div className=\"pills small\"></div>\n                <div className=\"pills medium\"></div>\n                <div className=\"pills large\"></div>\n                <div className=\"pills medium\"></div>\n                <div className=\"pills small\"></div>\n                <div className=\"features-area\">\n                    <h1>Features</h1>\n                    <div className=\"feature-content\">\n                        <div className=\"feature-circle\">Write Stories, Poetry, Novels, Quotes. <h2>Public/Private</h2></div>\n                        <div className=\"feature-circle\">Read other people’s public written works :)</div>\n                        <div className=\"feature-circle\">Find authors nearby to connect. <h2>(if they have the find me option enabled)</h2></div>\n                        <div className=\"feature-circle\">Speech recognition to take in voice input instead of traditional typing</div>\n                    </div>\n                    <div className=\"buttons\">\n                        <Link to=\"/read\"><div className=\"button\">Start Reading</div></Link>\n                        <Link to=\"/register\"> <div className=\"button\">Sign Up</div></Link>\n                    </div>\n                </div>\n            </section>\n        </div>\n    )\n}\n\nexport default Home\n","export default __webpack_public_path__ + \"static/media/placeholder-story.svg.c6977112.svg\";","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport storyImage from '../uploads/writtenWorks/placeholder-story.svg.svg'\nfunction Card({ name, id, author, description, workType, genre, triggerWarning, nsfw, violence }) {\n\n    return (\n        <>\n            {\n                <Link className=\"cardLink\" to={`/readwrittenwork/${id}`}>\n                    <div className=\"cards\">\n                        <img src={storyImage} alt=\"Placeholder\" />\n                        <div className=\"cardText\">\n                            <h1>{name}</h1>\n                            <h2>{author}</h2>\n                            <p>{description}</p>\n                            <div className=\"tagsArea\">\n                                <div className=\"tags\">{workType}</div>\n                                {genre.map(gen => <div key={gen} className=\"tags\">{gen}</div>)}\n                                {triggerWarning ? <div className=\"warning-tag\">Trigger Warning</div> : ''}\n                                {nsfw ? <div className=\"warning-tag\">18+</div> : ''}\n                                {violence ? <div className=\"warning-tag\">Violence</div> : ''}\n                            </div>\n                        </div>\n\n                    </div>\n                </Link>\n            }\n        </>\n    )\n}\n\nexport default Card\n","export default __webpack_public_path__ + \"static/media/arrow.38ea6e53.svg\";","export default __webpack_public_path__ + \"static/media/cross.69bd5189.svg\";","import React, { useState, useEffect } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport Card from '../components/Card';\nimport arrow from '../images/arrow.svg'\nimport cross from '../images/cross.svg'\nfunction Read({ isLoggedIn }) {\n    const [isGenreOpen, setIsGenreOpen] = useState(false);\n    const [isWorkOpen, setIsWorkOpen] = useState(false);\n    const [writtenWorkData, setWrittenWorkData] = useState([]);\n    const [selectedGenre, setSelectedGenre] = useState([]);\n    const [selectedWrittenwork, setSelectedWrittenwork] = useState([]);\n    const [query, setQuery] = useState(`api/v1/writtenWork`);\n    useEffect(() => {\n        readWrittenWorkHandler();\n    }, [query])\n    const readWrittenWorkHandler = async () => {\n        try {\n            const response = await fetch(query)\n            const data = await response.json();\n            setWrittenWorkData(data.data);\n        } catch (err) {\n            console.log(err)\n        }\n\n    }\n    const selectedGenreHandler = async (e) => {\n        let push = true;\n        selectedGenre.forEach(genre => {\n            if (genre === e.target.textContent) {\n                push = false;\n            }\n        })\n        if (push) {\n            selectedGenre.push(e.target.textContent)\n            setSelectedGenre(selectedGenre)\n            if (!selectedWrittenwork.length) {\n                setQuery(`api/v1/writtenWork?genre[in]=${selectedGenre}`);\n            }\n            else {\n                setQuery(`api/v1/writtenWork?genre[in]=${selectedGenre}&workType[in]=${selectedWrittenwork}`)\n            }\n        }\n    }\n    const selectedWrittenworkHandler = async (e) => {\n        let push = true;\n        selectedWrittenwork.forEach(workType => {\n            if (workType === e.target.textContent) {\n                push = false;\n            }\n        })\n        if (push) {\n            selectedWrittenwork.push(e.target.textContent)\n            setSelectedWrittenwork(selectedWrittenwork)\n        }\n        if (!selectedGenre.length) {\n            setQuery(`api/v1/writtenWork?workType[in]=${selectedWrittenwork}`);\n        }\n        else {\n            setQuery(`api/v1/writtenWork?genre[in]=${selectedGenre}&workType[in]=${selectedWrittenwork}`)\n        }\n    }\n    const removeWrittenWorkHandler = (idx) => {\n        let newSelectedWritten = selectedWrittenwork.filter((workType, id) => id !== idx);\n        setSelectedWrittenwork(newSelectedWritten);\n        updateQuery(newSelectedWritten, selectedGenre);\n    }\n    const removeGenreHandler = (e) => {\n        let newSelectedGenre = selectedGenre.filter(genre => genre !== e.target.textContent.trim());\n        setSelectedGenre(newSelectedGenre);\n        updateQuery(selectedWrittenwork, newSelectedGenre);\n    }\n    function updateQuery(selectedTagList, selectedGenreList) {\n        if (!selectedGenreList.length && !selectedTagList.length) {\n            setQuery(`api/v1/writtenWork`);\n        }\n        else if (!selectedGenreList.length && selectedTagList.length > 0) {\n            setQuery(`api/v1/writtenWork?workType[in]=${selectedTagList}`)\n        }\n        else if (!selectedTagList.length && selectedGenreList.length > 0) {\n            setQuery(`api/v1/writtenWork?genre[in]=${selectedGenreList}`);\n        }\n        else {\n            setQuery(`api/v1/writtenWork?genre[in]=${selectedGenreList}&workType[in]=${selectedTagList}`)\n        }\n    }\n    return (\n        <div>\n            <div className=\"header\">\n                <div className=\"section\">\n                    <div className=\"tagsArea\">\n                        {selectedWrittenwork.map((workType, idx) => <div key={workType} onClick={() => removeWrittenWorkHandler(idx)} className=\"tags\">{workType} <img src={cross} alt=\"Cancel\" /> </div>)}\n                        {selectedGenre.map(genre => <div key={genre} onClick={removeGenreHandler} className=\"tags\">{genre} <img src={cross} alt=\"Cancel\" /> </div>)}\n                    </div>\n                </div>\n                <div className=\"section\">\n                    <div className=\"dropdown\">\n                        <div className=\"title\" onClick={() => {\n                            setIsGenreOpen(!isGenreOpen);\n                            setIsWorkOpen(false)\n                        }}>Genre\n                        <img src={arrow} alt=\"arrow\" className={isGenreOpen ? \"rotateDown\" : \"\"} />\n                        </div>\n                        <ul onClick={selectedGenreHandler} className={`options ${isGenreOpen ? \"expand\" : \"\"}`}>\n                            <li>Fantasy</li>\n                            <li>Adventure</li>\n                            <li>Romance</li>\n                            <li>Contemporary</li>\n                            <li>Dystopian</li>\n                            <li>Mystery</li>\n                            <li>Horror</li>\n                            <li>Thriller</li>\n                            <li>Paranormal</li>\n                            <li>Historical fiction</li>\n                            <li>Science Fiction</li>\n                            <li>Memoir</li>\n                            <li>Self-help / Personal</li>\n                            <li>Motivational</li>\n                            <li>Guide / How-to</li>\n                            <li>Humor</li>\n                            <li>Children’s</li>\n                            <li>Other</li>\n\n                        </ul>\n                    </div>\n                    <div className=\"dropdown\">\n                        <div className=\"title\" onClick={() => {\n                            setIsWorkOpen(!isWorkOpen);\n                            setIsGenreOpen(false);\n                        }}>Work Type\n                        <img src={arrow} alt=\"arrow\" className={isWorkOpen ? \"rotateDown\" : \"\"} />\n                        </div>\n                        <ul onClick={selectedWrittenworkHandler} className={`options ${isWorkOpen ? \"expand\" : \"\"}`}>\n                            <li>Poetry</li>\n                            <li>Short Story</li>\n                            <li>Novel</li>\n                            <li>Journal/Diary</li>\n                            <li>Quotes</li>\n                        </ul>\n                    </div>\n\n                </div>\n            </div>\n            <div className=\"cardsSection\">\n                {\n                    writtenWorkData.map(writtenWork => { return <Card key={writtenWork._id} id={writtenWork._id} name={writtenWork.name} author={`${writtenWork.author.firstName} ${writtenWork.author.lastName}`} photo={writtenWork.photo} description={writtenWork.description} workType={writtenWork.workType} genre={writtenWork.genre} nsfw={writtenWork.nsfwContent} violence={writtenWork.violence} triggerWarning={writtenWork.suicideOrTriggerWarning} /> })\n                }\n            </div>\n        </div >\n    )\n}\n\nexport default Read","export default __webpack_public_path__ + \"static/media/profilePlaceholder.c946e319.svg\";","export default __webpack_public_path__ + \"static/media/placeholder_writtenwork.c6977112.svg\";","export default __webpack_public_path__ + \"static/media/empty_star.a393f159.svg\";","export default __webpack_public_path__ + \"static/media/filled_star.4350e984.svg\";","export default __webpack_public_path__ + \"static/media/edit.57a321a0.svg\";","export default __webpack_public_path__ + \"static/media/delete.17e5942c.svg\";","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport storyImage from '../images/placeholder_writtenwork.svg'\nimport emptyStar from '../images/empty_star.svg';\nimport filledStar from '../images/filled_star.svg';\nimport editIcon from '../images/edit.svg';\nimport deleteIcon from '../images/delete.svg'\n\nfunction CardAuthor({ name, id, rerender, setRerender, view, rating, description, workType, genre, triggerWarning, nsfw, violence }) {\n\n    const [isDeleteRequested, setIsDeleteRequested] = useState(false);\n    const deleteWrittenWorkHanlder = async () => {\n        try {\n            const response = await fetch(`/api/v1/writtenWork/${id}`, {\n                method: \"DELETE\"\n            })\n            const data = await response.json();\n            setRerender(!rerender)\n        } catch (err) {\n            console.log(err)\n        }\n    }\n    const starRenderer = () => {\n        let ratingRenderer = [];\n        for (let i = 0; i < 5; i++) {\n            if (i < Math.round(parseInt(rating))) {\n                ratingRenderer.push(<img key={i} src={filledStar} alt=\"filled star\" />)\n            }\n            else {\n                ratingRenderer.push(<img key={i} src={emptyStar} alt=\"empty star\" />)\n            }\n        }\n        return ratingRenderer;\n    }\n\n    return (\n        <>\n\n            {\n                <div className=\"cardLink\">\n                    <div className={`deleteOverlay ${isDeleteRequested ? 'showOpacity' : ''}`}>\n                        Are you sure you want to delete your written work - \"{name}\"?\n                        <div className=\"buttons\">\n                            <div className=\"button\" onClick={deleteWrittenWorkHanlder}>Yes</div>\n                            <div className=\"button\" onClick={() => { setIsDeleteRequested(false) }}>No</div>\n                        </div>\n                    </div>\n                    <div className=\"cardOverlay\">\n                        <Link to={`/editwrittenwork/${id}`}>\n                            <div className={`toolTip ${isDeleteRequested ? '' : 'showzindex'}`} tooltip={\"Edit Your Written Work\"} >\n                                <img src={editIcon} alt=\"Edit\" />\n                            </div>\n                        </Link>\n                        <div className={`toolTip ${isDeleteRequested ? '' : 'showzindex'}`} tooltip={\"Delete This Written Work\"} onClick={() => { setIsDeleteRequested(true) }}>\n                            <img src={deleteIcon} alt=\"Delete\" />\n                        </div>\n                    </div>\n                    <div className=\"cards\">\n                        <img src={storyImage} alt=\"Placeholder\" />\n                        <div className=\"cardText\">\n                            <h1>{name}</h1>\n                            {view === \"public\" ? <div className=\"rating\">\n                                <div className=\"stars\">\n                                    {starRenderer()}\n                                </div></div> : <div className=\"tagsArea\"> <div className=\"tags view-tag\">{view}</div> </div>}\n                            <p>{description}</p>\n                            <div className=\"tagsArea\">\n                                <div className=\"tags\">{workType}</div>\n                                {genre.map(gen => <div key={gen} className=\"tags\">{gen}</div>)}\n                                {triggerWarning ? <div className=\"warning-tag\">Trigger Warning</div> : ''}\n                                {nsfw ? <div className=\"warning-tag\">18+</div> : ''}\n                                {violence ? <div className=\"warning-tag\">Violence</div> : ''}\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            }\n        </>\n    )\n}\n\nexport default CardAuthor\n","export default __webpack_public_path__ + \"static/media/plus.404c0203.svg\";","import React, { useEffect, useState, useRef } from 'react'\nimport { Redirect, Link } from 'react-router-dom'\nimport authorImage from '../images/profilePlaceholder.svg'\nimport Card from '../components/CardAuthor';\nimport add from '../images/plus.svg';\n\nfunction Profile({ isLoggedIn }) {\n    const [query, setQuery] = 'api/v1/auth/me';\n    const [profileData, setProfileData] = useState([]);\n    const [editAddress, setEditAddress] = useState();\n    const [addressFields, setAddressFields] = useState(false);\n    const [profileLocation, setProfileLocation] = useState({});\n    const [rerender, setRerender] = useState(false);\n    const [showAddressPopup, setShowAddressPopup] = useState(false);\n    const [nearbyAuthors, setNearbyAuthors] = useState();\n    const miles = useRef();\n    let addressLine = \"\";\n    let addressCountry = \"\";\n    let addressCity = \"\";\n    let addressZipcode = \"\";\n    useEffect(() => {\n        getMyProfileHandler()\n    }, [query, rerender])\n    const getMyProfileHandler = async () => {\n        try {\n            const response = await fetch(\"api/v1/auth/me\")\n            const data = await response.json();\n            setProfileData(data.data);\n            if (data.data.location) {\n                setProfileLocation(data.data.location)\n            }\n\n        } catch (err) {\n            console.log(err)\n        }\n    }\n    const addAddressHandler = async () => {\n        try {\n            const response = await fetch(`/api/v1/auth/me`, {\n                method: \"PUT\",\n                body: JSON.stringify({\n                    address: `${addressLine} ${addressCity} ${addressCountry} ${addressZipcode}`.trim()\n                }),\n                headers: {\n                    \"Content-type\": \"application/json; charset=UTF-8\"\n                }\n            })\n            const data = await response.json();\n            if (data.data.location) {\n                setProfileLocation(data.data.location)\n            }\n        } catch (err) {\n            console.log(err)\n        }\n    }\n    const findAuthorsNearbyHandler = async () => {\n        if (miles.current.value) {\n            console.log(profileLocation.zipcode.trim())\n            try {\n                const response = await fetch(`api/v1/users/radius/${profileLocation.zipcode}/${miles.current.value}`)\n                const data = await response.json();\n                setNearbyAuthors(data.data);\n                console.log(data);\n\n            } catch (err) {\n                console.log(err)\n            }\n        }\n    }\n    return (\n\n        <>\n            {\n                profileData.writtenworks &&\n                <div className=\"profilePage\">\n                    {!isLoggedIn ? <Redirect to=\"/login\" /> : \"\"}\n                    <div className={`popup-bg ${showAddressPopup ? 'showBlock' : \"\"}`}>\n                        <div className=\"popup-address popup\">\n                            <div className=\"popup-header\">\n                                {console.log(nearbyAuthors)}\n                                Find Authors Near Me\n                            </div>\n                            <div className=\"popup-body\">\n                                <p>Your address: {profileLocation.formattedAddress} </p>\n                                <p>Find authors within radius (in miles): <input ref={miles} type=\"number\" min=\"0\" step=\"0.01\" onChange={() => miles.current.value ? console.log(miles.current.value) : console.log(miles)} /></p>\n                                {nearbyAuthors ? nearbyAuthors.users.map(user => { return <div className=\"nearbyaddress\"><span> {user.firstName} {user.lastName}: </span> <span>{user.location.formattedAddress}</span></div> }) : console.log(\"noe\")}\n                            </div>\n                            <div className=\"popup-footer\">\n                                <div className=\"cancel\" onClick={() => { setShowAddressPopup(false); setNearbyAuthors() }}>Cancel</div>\n                                <div className=\"find\" onClick={findAuthorsNearbyHandler}>Find</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"header\">\n                        <div className=\"section\">\n                            <div>\n                                <img src={authorImage} alt=\"Profile Icon\" />\n                            </div>\n                            <div>\n                                <h1>{profileData.firstName} {profileData.lastName}</h1>\n                                <div className=\"hoverBlendWhiteButton\">{profileLocation.formattedAddress ?\n                                    <div> {profileLocation.formattedAddress}</div> :\n                                    addressFields ?\n                                        <div className=\"addAddressArea\">\n                                            <input type=\"text\" name=\"text\" placeholder=\"Address\" onChange={(e) => { addressLine = e.target.value }} />\n                                            <input type=\"text\" name=\"text\" placeholder=\"City\" onChange={(e) => { addressCity = e.target.value }} />\n                                            <input type=\"text\" name=\"text\" placeholder=\"Country\" onChange={(e) => { addressCountry = e.target.value }} />\n                                            <input type=\"text\" name=\"text\" placeholder=\"Zipcode\" onChange={(e) => { addressZipcode = e.target.value }} />\n                                            <div onClick={addAddressHandler} className=\"button\">Add</div>\n                                        </div> :\n                                        <div onClick={() => { setAddressFields(true) }}><img src={add} alt=\"Plus\" /> Add Address</div>}</div>\n\n                            </div>\n                        </div>\n                        <div className=\"section\">\n                            <div className=\"button\" onClick={() => { setShowAddressPopup(true) }}>Find Authors Near Me</div>\n                            <Link to=\"/createWrittenWork\"><div className=\"button\">+ New Written Work</div></Link>\n                        </div>\n                    </div>\n                    <div className=\"cardsSection\">\n                        {profileData.writtenworks.map(writtenWork => { return <Card key={writtenWork._id} id={writtenWork._id} rerender={rerender} setRerender={setRerender} rating={writtenWork.averageRating} view={writtenWork.view} name={writtenWork.name} photo={writtenWork.photo} description={writtenWork.description} workType={writtenWork.workType} genre={writtenWork.genre} nsfw={writtenWork.nsfwContent} violence={writtenWork.violence} triggerWarning={writtenWork.suicideOrTriggerWarning} /> })}\n                    </div>\n                </div>\n            }\n        </>\n    )\n}\n\nexport default Profile\n","export default __webpack_public_path__ + \"static/media/expand.f2c9b9ae.svg\";","export default __webpack_public_path__ + \"static/media/about.8c851905.svg\";","import React, { useEffect, useState, useRef } from 'react'\nimport { useParams } from 'react-router';\nimport profilePlaceholder from '../images/profilePlaceholder.svg';\nimport expand from '../images/expand.svg';\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\nimport emptyStar from '../images/empty_star.svg';\nimport filledStar from '../images/filled_star.svg';\nimport about from '../images/about.svg';\nimport Error from '../components/Error';\nimport { useHistory } from 'react-router-dom'\n\n\nfunction ReadWrittenWork({ isLoggedIn }) {\n    const { id } = useParams();\n    const history = useHistory()\n\n    const [writtenWorkData, setWrittenWorkData] = useState([]);\n    const [query, setQuery] = useState(`/api/v1/writtenWork/${id}`);\n    const [userRating, setUserRating] = useState([0, 0, 0, 0, 0]);\n    const [errors, setErrors] = useState(\"\");\n    const [isDescriptionOpen, setIsDescriptionOpen] = useState(false);\n\n    const handle = useFullScreenHandle();\n    useEffect(() => {\n        loadWrittenWork();\n    }, [query])\n    const commentRef = useRef();\n    const loadWrittenWork = async () => {\n        try {\n            const response = await fetch(query)\n            const data = await response.json();\n            setWrittenWorkData(data.data);\n        } catch (err) {\n            console.log(err)\n        }\n    }\n    const submitCommentHandler = async () => {\n        if (isLoggedIn) {\n            if (commentRef.current.value.length) {\n                try {\n                    const response = await fetch(`/api/v1/writtenWork/${id}/comments`, {\n                        method: \"POST\",\n                        body: JSON.stringify({\n                            comment: commentRef.current.value\n                        }),\n                        headers: {\n                            \"Content-type\": \"application/json; charset=UTF-8\"\n                        }\n                    })\n                    const data = await response.json();\n                    setErrors(\"\");\n                    if (data.success) {\n                        setQuery(query)\n                    }\n                    else {\n                        setErrors(data.error)\n                    }\n\n                } catch (err) {\n                    setErrors(err)\n                }\n            }\n            else {\n                setErrors(\"Comments can't be empty\")\n            }\n            commentRef.current.value = \"\"\n        }\n        else {\n            history.push(\"/login\");\n        }\n    }\n    const submitReviewHandler = async (rating) => {\n        if (isLoggedIn) {\n            try {\n                const response = await fetch(`/api/v1/writtenWork/${id}/comments`, {\n                    method: \"POST\",\n                    body: JSON.stringify({\n                        rating: rating\n                    }),\n                    headers: {\n                        \"Content-type\": \"application/json; charset=UTF-8\"\n                    }\n                })\n                const data = await response.json();\n                if (data.success) {\n                    // setQuery(`/api/v1/writtenWork/${}`)\n                }\n            } catch (err) {\n                console.log(err)\n            }\n        } else {\n            history.push(\"/login\");\n        }\n    }\n    const mouseOverStar = (index) => {\n        for (let i = 0; i < 5; i++) {\n            if (i <= index) {\n                userRating[i] = 1;\n            }\n            else {\n                userRating[i] = 0;\n            }\n        }\n        setUserRating(userRating)\n    }\n\n    const starRenderer = () => {\n        let ratingRenderer = [];\n        for (let i = 0; i < 5; i++) {\n            if (i < Math.round(parseInt(writtenWorkData.averageRating))) {\n                ratingRenderer.push(<img key={i} src={filledStar} alt=\"filled star\" />)\n            }\n            else {\n                ratingRenderer.push(<img key={i} src={emptyStar} alt=\"empty star\" />)\n            }\n        }\n        return ratingRenderer;\n    }\n    return (\n        <>\n            {\n                writtenWorkData.author && writtenWorkData.genre && writtenWorkData.comments && < div className=\"readWrittenWork\">\n                    <div className={`readSection ${isDescriptionOpen ? \"marginRight\" : \"\"}`}>\n                        <div className=\"heading\">\n                            <h1>{writtenWorkData.name}</h1>\n                            <div className=\"options\">\n                                <div onClick={handle.enter} className=\"fullscreen\">\n                                    <img src={expand} alt=\"expand\" /> Fullscreen\n                                </div>\n                                <div onClick={() => { setIsDescriptionOpen(!isDescriptionOpen); console.log(isDescriptionOpen) }} className={`fullscreen ${isDescriptionOpen ? 'selectedState' : \"\"}`}>\n                                    <img src={about} alt=\"expand\" /> About\n                                </div>\n                            </div>\n                        </div>\n                        <FullScreen handle={handle} style={{ color: '#fff' }}>\n                            <textarea className=\"readArea\" readOnly>\n                                {writtenWorkData.content}\n                            </textarea>\n                        </FullScreen>\n                    </div>\n                    <div className={`description ${isDescriptionOpen ? \"slideIn\" : \"\"}`}>\n                        <div className=\"padding\">\n                            <h1>{writtenWorkData.name}</h1>\n                            <h2>{writtenWorkData.author.firstName} {writtenWorkData.author.lastName}</h2>\n                            <div className=\"tagsArea\">\n                                <div className=\"tags\">{writtenWorkData.workType}</div>\n                                {writtenWorkData.genre.map(gen => <div key={gen} className=\"tags\">{gen}</div>)}\n                            </div>\n                            <p>{writtenWorkData.description} </p>\n                            <div className=\"rating\">\n                                <div className=\"stars\">\n                                    {starRenderer()}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"comments\">\n\n                            <div className=\"padding\">\n                                <h1>Comments</h1>\n                                {writtenWorkData.comments.map(comment => {\n                                    if (comment.comment) {\n                                        return <div key={comment._id} className=\"comment\">\n                                            <div className=\"commentName\">\n                                                <img src={profilePlaceholder} alt=\"Profile\" />\n                                                {comment.user.firstName} {comment.user.lastName}\n                                            </div>\n                                            <div className=\"commentDesc\">\n                                                {comment.comment}\n                                            </div>\n                                        </div>\n                                    }\n                                    return \"\";\n                                }\n                                )}\n                            </div>\n                        </div>\n                        <div className=\"userInputSection\">\n                            <Error error={errors} />\n                            <div className=\"borderInput\">\n                                <input type=\"text\" placeholder=\"Leave A Comment\" ref={commentRef} />\n                                <div onClick={submitCommentHandler}>Post</div>\n                            </div>\n\n                            <div className=\"inputRating\">\n                                <span>Leave A Rating:</span>\n\n                                {userRating.map((rating, i) =>\n                                    <img onClick={() => submitReviewHandler(i + 1)}\n                                        onMouseOver={() => mouseOverStar(i)} key={i} src={rating ? filledStar : emptyStar}\n                                        alt=\"empty star\" />)\n                                }\n                            </div>\n                        </div>\n\n                    </div>\n                </div>}\n        </>\n    )\n}\n\n\nexport default ReadWrittenWork\n","export default __webpack_public_path__ + \"static/media/speech.852f4052.svg\";","import React, { useEffect, useState, useRef } from 'react'\nimport { useParams } from 'react-router';\nimport { Redirect } from 'react-router-dom'\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\nimport expand from '../images/expand.svg';\nimport about from '../images/about.svg';\nimport speech from '../images/speech.svg';\nimport emptyStar from '../images/empty_star.svg';\nimport filledStar from '../images/filled_star.svg';\nimport profilePlaceholder from '../images/profilePlaceholder.svg';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\n\nfunction EditWrittenwork({ isLoggedIn }) {\n    const { id } = useParams();\n    const [query, setQuery] = useState(`/api/v1/writtenWork/${id}`);\n    const [writtenWorkData, setWrittenWorkData] = useState([]);\n    const [isDescFocus, setIsDescFocus] = useState(false);\n    const [isListening, setIsListening] = useState(false);\n    const [rerender, setRerender] = useState(false);\n    const [lastText, setLastText] = useState(\"\");\n    const [text, setText] = useState(\"\");\n    const [lastDescText, setLastDescText] = useState(\"\");\n    const [descText, setDescText] = useState(\"\");\n    const [isVRSupported, setIsVRSupported] = useState(true);\n    const [isDescriptionOpen, setIsDescriptionOpen] = useState(false);\n\n    const textRef = useRef();\n    const descRef = useRef();\n    useEffect(() => {\n        const timer = setTimeout(async () => {\n            if (lastText != text) {\n                try {\n                    await fetch(`/api/v1/writtenWork/${id}`, {\n                        method: \"PUT\",\n                        body: JSON.stringify({\n                            content: text\n                        }),\n                        headers: {\n                            \"Content-type\": \"application/json; charset=UTF-8\"\n                        }\n                    })\n                } catch (err) {\n                    console.log(err)\n                }\n                setLastText(text);\n            }\n        }, 3000)\n        return () => clearTimeout(timer);\n    }, [text])\n    useEffect(() => {\n        const timerForDesc = setTimeout(async () => {\n            if (lastDescText != descText) {\n                try {\n                    await fetch(`/api/v1/writtenWork/${id}`, {\n                        method: \"PUT\",\n                        body: JSON.stringify({\n                            description: descText\n                        }),\n                        headers: {\n                            \"Content-type\": \"application/json; charset=UTF-8\"\n                        }\n                    })\n                } catch (err) {\n                    console.log(err)\n                }\n                setLastDescText(descText);\n            }\n        }, 3000)\n        return () => clearTimeout(timerForDesc);\n    }, [descText])\n    const { transcript, resetTranscript } = useSpeechRecognition()\n    const handle = useFullScreenHandle();\n    const speechHandler = () => {\n\n        if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n            console.log(\"No support for browser\")\n            setIsVRSupported(false);\n            setTimeout(\n                () => {\n                    setIsVRSupported(true);\n                }, 4000);\n            console.log(\"no support\")\n        }\n        setIsListening(!isListening);\n        if (isListening) {\n            SpeechRecognition.startListening({ continuous: true })\n        }\n        else {\n            SpeechRecognition.stopListening();\n            // SpeechRecognition.abortListening();\n            textRef.current.value = `${writtenWorkData.content} ${transcript}`;\n            setWrittenWorkData({ ...writtenWorkData, content: `${writtenWorkData.content} ${transcript}` });\n            setText(`${writtenWorkData.content} ${transcript}`);\n            resetTranscript();\n        }\n    }\n\n\n    useEffect(() => {\n        loadWrittenWork();\n    }, [query, rerender])\n    const loadWrittenWork = async () => {\n        try {\n            const response = await fetch(query)\n            const data = await response.json();\n            setWrittenWorkData(data.data);\n\n        } catch (err) {\n            console.log(err)\n        }\n    }\n    const starRenderer = () => {\n        let ratingRenderer = [];\n        for (let i = 0; i < 5; i++) {\n            if (i < Math.round(parseInt(writtenWorkData.averageRating))) {\n                ratingRenderer.push(<img key={i} src={filledStar} alt=\"filled star\" />)\n            }\n            else {\n                ratingRenderer.push(<img key={i} src={emptyStar} alt=\"empty star\" />)\n            }\n        }\n        return ratingRenderer;\n    }\n    return (\n        <> {\n            writtenWorkData.author && writtenWorkData.genre && writtenWorkData.comments &&\n            <div className=\"readWrittenWork\">\n                {/* {console.log(writtenWorkData.content)} */}\n                {!isLoggedIn ? <Redirect to=\"/login\" /> : \"\"}\n                <div className={`readSection ${isDescriptionOpen ? \"marginRight\" : \"\"}`}>\n                    <div className=\"heading\">\n                        <h1>{writtenWorkData.name}</h1>\n                        <div className=\"options\">\n                            <div className=\"fullscreen\" onClick={() => { speechHandler(); if (isListening) { resetTranscript(); } }}>\n                                <img src={speech} alt=\"Speech\" /> Start Dictation\n                            </div>\n                            <div onClick={handle.enter} className=\"fullscreen\">\n                                <img src={expand} alt=\"Expand\" /> Fullscreen\n                            </div>\n                            <div onClick={() => { setIsDescriptionOpen(!isDescriptionOpen); console.log(isDescriptionOpen) }} className={`fullscreen ${isDescriptionOpen ? 'selectedState' : \"\"}`}>\n                                <img src={about} alt=\"expand\" /> About\n                            </div>\n                        </div>\n                    </div>\n                    <FullScreen handle={handle} style={{ color: '#fff' }}>\n                        <textarea className=\"readArea\" ref={textRef} onChange={(e) => { setText(textRef.current.value) }} >\n                            {writtenWorkData.content}\n                        </textarea>\n                    </FullScreen>\n                </div>\n                <div className={`description ${isDescriptionOpen ? \"slideIn\" : \"\"}`}>\n                    <div className=\"padding\">\n                        <h1>{writtenWorkData.name}</h1>\n                        <h2>{writtenWorkData.author.firstName} {writtenWorkData.author.lastName}</h2>\n                        <div className=\"tagsArea\">\n                            <div className=\"tags\">{writtenWorkData.workType}</div>\n                            {writtenWorkData.genre.map(gen => <div key={gen} className=\"tags\">{gen}</div>)}\n                        </div>\n                        <p>\n                            {/* <textarea  name=\"description\" id=\"description\" className={`descArea ${isDescFocus ? 'editting' : ''}`} ref={descRef} onChange={(e) => { setDescText(descRef.current.value) }} onBlur={() => { setIsDescFocus(false) }} onFocus={() => { setIsDescFocus(true) }}>\n                                {writtenWorkData.description}\n                            </textarea> */}\n                            <div\n                                contentEditable className={`descArea ${isDescFocus ? 'editting' : ''}`} ref={descRef} onInput={(e) => { setDescText(descRef.current.textContent) }} onBlur={() => { setIsDescFocus(false) }} onFocus={() => { setIsDescFocus(true) }}>\n                                {writtenWorkData.description}\n                            </div>\n                        </p>\n                        {writtenWorkData.view === \"public\" ? <div className=\"rating\">\n                            <div className=\"stars\">\n                                {starRenderer()}\n                            </div></div> : <div className=\"tagsArea\"> <div className=\"tags view-tag\">{writtenWorkData.view}</div> </div>}\n                    </div>\n\n                    <div className=\"comments\">\n\n                        <div className=\"padding\">\n                            <h1>Comments</h1>\n                            {writtenWorkData.view === \"public\" ?\n                                <> {\n                                    writtenWorkData.comments.map(comment => {\n                                        if (comment.comment) {\n                                            return <div key={comment._id} className=\"comment\">\n                                                <div className=\"commentName\">\n                                                    <img src={profilePlaceholder} alt=\"Profile\" />\n                                                    {comment.user.firstName} {comment.user.lastName}\n                                                </div>\n                                                <div className=\"commentDesc\">\n                                                    {comment.comment}\n                                                </div>\n                                            </div>\n                                        }\n                                        return \"\";\n                                    }\n                                    )\n                                }</>\n                                : <h2>No Comments For Private Written Works</h2>}\n                        </div>\n                    </div>\n\n                </div>\n                <div className={`no-support ${isVRSupported ? \"\" : ' showBlock showOpacity'}`}>\n                    <div>Your browser doesn’t support voice recognition software</div>\n                    <div>Note: Chrome has the best support for the voice recognition software.</div>\n                </div>\n            </div>}</>\n    )\n}\n\nexport default EditWrittenwork\n","import React, { useState, useRef } from 'react'\nimport Error from '../components/Error';\nimport { useHistory, Redirect } from 'react-router-dom';\n\nfunction CreateWrittenwork({ isLoggedIn }) {\n    const [isWorkOpen, setIsWorkOpen] = useState(false);\n    const [isGenreOpen, setIsGenreOpen] = useState(false);\n    const [view, setView] = useState(false);\n    const [errors, setErrors] = useState(\"\");\n    const name = useRef();\n    const description = useRef();\n    const workType = useRef();\n    const genre = useRef();\n    const visibility = useRef();\n    const nsfw = useRef();\n    const violence = useRef();\n    const triggerwarning = useRef();\n    const history = useHistory();\n\n    const selectedWrittenworkHandler = () => {\n        setIsWorkOpen(true)\n    }\n    const selectedGenreHandler = () => {\n        setIsGenreOpen(true)\n    }\n    const submitFormHandler = async (e) => {\n        e.preventDefault();\n        let genreArray = genre.current.value.split(',');\n        try {\n            const response = await fetch(\"/api/v1/writtenWork\", {\n                method: \"POST\",\n                body: JSON.stringify({\n                    name: name.current.value,\n                    description: description.current.value,\n                    workType: workType.current.value,\n                    genre: genreArray,\n                    view,\n                    nsfwContent: nsfw.current.checked,\n                    violence: violence.current.checked,\n                    suicideOrTriggerWarning: triggerwarning.current.checked\n                }),\n                headers: {\n                    \"Content-type\": \"application/json; charset=UTF-8\"\n                }\n            })\n            const data = await response.json();\n            if (data.success) {\n                setErrors(\"\");\n                history.replace(`/editwrittenwork/${data.data._id}`)\n            } else {\n                setErrors(data.error);\n            }\n\n        } catch (err) {\n            console.log(err)\n        }\n    }\n    return (\n        <div className=\"createPage\">\n            {!isLoggedIn ? <Redirect to=\"/login\" /> : \"\"}\n\n            <div className=\"whitebg\">\n                <div className=\"divider\">\n                    <Error error={errors} />\n                    <div className=\"searchInput\">\n                        <input type=\"text\" name=\"text\" required ref={name} />\n                        <label className=\"label-name\">\n                            <span className=\"content-name\">\n                                Name *\n                            </span>\n                        </label>\n                    </div>\n                    <div className=\"textarea\">\n                        <label className=\"label-name\"><span className=\"content-name\">\n                            Description*\n                            </span>\n                        </label>\n                        <textarea name=\"description\" id=\"description\" ref={description}>\n                        </textarea>\n                    </div>\n                    <div className=\"typeDropdown\">\n                        <div className=\"searchInput\">\n                            <input type=\"text\" name=\"text\" ref={workType} required onFocus={selectedWrittenworkHandler} onBlur={() => { setIsWorkOpen(false) }} />\n                            <label className=\"label-name\">\n                                <span className=\"content-name\">\n                                    Work Type *\n                            </span>\n                            </label>\n\n                        </div>\n                        <ul className={`options ${isWorkOpen ? \"expand\" : \"\"}`}>\n                            <li>Poetry</li>\n                            <li>Short Story</li>\n                            <li>Novel</li>\n                            <li>Journal/Diary</li>\n                            <li>Quotes</li>\n                        </ul>\n                    </div>\n                    <div className=\"typeDropdown\">\n                        <div className=\"searchInput\">\n                            <input type=\"text\" name=\"text\" required ref={genre} onFocus={selectedGenreHandler} onBlur={() => { setIsGenreOpen(false) }} />\n                            <label className=\"label-name\">\n                                <span className=\"content-name\">\n                                    Genre *\n                            </span>\n                            </label>\n                        </div>\n                        <ul className={`options ${isGenreOpen ? \"expand\" : \"\"}`}>\n                            <li>Fantasy</li>\n                            <li>Adventure</li>\n                            <li>Romance</li>\n                            <li>Contemporary</li>\n                            <li>Dystopian</li>\n                            <li>Mystery</li>\n                            <li>Horror</li>\n                            <li>Thriller</li>\n                            <li>Paranormal</li>\n                            <li>Historical fiction</li>\n                            <li>Science Fiction</li>\n                            <li>Memoir</li>\n                            <li>Self-help / Personal</li>\n                            <li>Motivational</li>\n                            <li>Guide / How-to</li>\n                            <li>Humor</li>\n                            <li>Children’s</li>\n                            <li>Other</li>\n\n                        </ul>\n                    </div>\n                </div>\n                <div className=\"divider\">\n                    <div className=\"radio\">\n                        Visibility\n                        <div className=\"radio-options\">\n                            <label class=\"container\">Public\n                                <input type=\"radio\" name=\"visibility\" value=\"public\" onClick={() => { setView(\"public\") }} />\n                                <span class=\"checkmark\"></span>\n                            </label>\n                            <label class=\"container\">Private\n                                <input type=\"radio\" name=\"visibility\" value=\"private\" onClick={() => { setView(\"private\") }} />\n                                <span class=\"checkmark\"></span>\n                            </label>\n                        </div>\n                    </div>\n                    <h2>We just need some more information so that our readers can have the best experience :)</h2>\n\n                    <div class=\"checkbox-container\">\n                        <label class=\"container\">18 +\n                            <input type=\"checkbox\" name=\"nsfw\" value=\"nsfw\" ref={nsfw} />\n                            <span class=\"checkmark\"></span>\n                        </label>\n                    </div>\n                    <div class=\"checkbox-container\">\n                        <label class=\"container\">Violence\n                            <input type=\"checkbox\" name=\"violence\" value=\"violence\" ref={violence} />\n                            <span class=\"checkmark\"></span>\n                        </label>\n                    </div>\n                    <div class=\"checkbox-container\">\n                        <label class=\"container\">Suicide/Trigger Warning\n                            <input type=\"checkbox\" name=\"triggerwarning\" value=\"triggerwarning\" ref={triggerwarning} />\n                            <span class=\"checkmark\"></span>\n                        </label>\n                    </div>\n                    <div className=\"button\" onClick={submitFormHandler}>Create</div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CreateWrittenwork\n","import React, { useState, useRef } from 'react'\nimport Error from '../components/Error';\nimport { Link, Redirect } from 'react-router-dom'\nimport logoNoBg from '../images/logoNoBg.svg';\nimport { useParams } from 'react-router';\n\nfunction Resetpassword({ isLoggedIn, setIsLoggedIn }) {\n    const { resettoken } = useParams();\n    const [errors, setErrors] = useState(\"\");\n    const inputPassword = useRef();\n    const resetHandler = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await fetch(`/api/v1/auth/resetpassword/${resettoken}`, {\n                method: \"PUT\",\n                body: JSON.stringify({\n                    password: inputPassword.current.value\n                }),\n                headers: {\n                    \"Content-type\": \"application/json; charset=UTF-8\"\n                }\n            })\n            const data = await response.json();\n            if (data.success) {\n                setErrors(\"\");\n                setIsLoggedIn(true);\n            }\n            else {\n                setIsLoggedIn(false);\n                setErrors(data.error);\n            }\n        } catch (err) {\n            console.log(err)\n        }\n\n    }\n    return (\n        <div className=\"login\">\n            {isLoggedIn ? <Redirect to=\"/profile\" /> : \"\"}\n            <img src={logoNoBg} alt=\"Main Logo\" />\n            <form className=\"login-form\">\n                <h1>Reset Account Password</h1>\n                <Error error={errors} />\n\n                <div className=\"searchInput\">\n                    <input ref={inputPassword} type=\"password\" name=\"password\" required />\n                    <label className=\"label-name\"> <span className=\"content-name\">\n                        New Password\n                </span>\n                    </label>\n                </div>\n                <button onClick={resetHandler} className=\"button marginTop\">Reset Password</button>\n                <div className=\"links borderTop\">Back to<b>\n                    <Link to=\"/login\">Log In</Link>\n                </b></div>\n            </form>\n        </div>\n    )\n}\n\nexport default Resetpassword\n","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nfunction NotLoggedIn({ location }) {\n    return (\n        <ul>\n            <li className={location.pathname === \"/\" ? \"selected\" : \"\"}><Link to=\"/\">Home</Link></li>\n            <li className={location.pathname === \"/read\" ? \"selected\" : \"\"}><Link to=\"/read\">Read</Link></li>\n            <li className={location.pathname === \"/login\" ? \"selected\" : \"\"}><Link to=\"/login\">Log In</Link></li>\n            <li className={location.pathname === \"/register\" ? \"selected\" : \"\"}><Link to=\"/register\">Sign Up</Link></li>\n        </ul>\n    )\n}\n\nexport default NotLoggedIn\n","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nfunction LoggedIn({ location, setIsLoggedIn }) {\n    const logOutHandler = async () => {\n        try {\n            const response = await fetch(\"/api/v1/auth/logout\")\n            const data = await response.json();\n            if (data.success) {\n                setIsLoggedIn(false);\n            }\n        } catch (err) {\n            console.log(err)\n        }\n    }\n    return (\n        <ul>\n            <li className={location.pathname === \"/read\" ? \"selected\" : \"\"}><Link to=\"/read\">Read</Link></li>\n            <li className={location.pathname === \"/profile\" ? \"selected\" : \"\"}><Link to=\"/profile\">Profile</Link></li>\n            <li className={location.pathname === \"/logout\" ? \"selected\" : \"\"} onClick={logOutHandler}>Logout</li>\n        </ul>\n    )\n}\n\nexport default LoggedIn\n","export default __webpack_public_path__ + \"static/media/logoLightBg.c9764a49.svg\";","import React from 'react'\nimport NotLoggedIn from './NotLoggedIn';\nimport LoggedIn from './LoggedIn';\nimport logoLightBg from '../images/logoLightBg.svg';\nimport { useLocation } from 'react-router-dom';\n\nfunction Nav({ isLoggedIn, setIsLoggedIn }) {\n    const location = useLocation();\n\n\n    return (\n        <div className=\"nav\">\n            <div id=\"logo\">\n                <img src={logoLightBg} alt=\"Logo\" />\n                Writer's Cafe\n            </div>\n            <nav>\n                {isLoggedIn ? <LoggedIn location={location} isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} /> : <NotLoggedIn location={location} />}\n            </nav>\n        </div>\n\n    )\n}\n\nexport default Nav\n","import React, { useState } from 'react'\nimport { Switch, Route, useLocation } from 'react-router-dom';\nimport './styles/app.scss'\nimport Login from './pages/Login'\nimport Register from './pages/Register'\nimport Home from './pages/Home'\nimport Read from './pages/Read'\nimport Profile from './pages/Profile'\nimport ReadWrittenWork from './pages/ReadWrittenWork'\nimport EditWrittenwork from './pages/EditWrittenwork'\nimport CreateWrittenwork from './pages/CreateWrittenwork'\n\nimport Resetpassword from './pages/Resetpassword'\nimport Nav from './components/Nav';\nfunction App() {\n  const location = useLocation();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  return (\n    <div className=\"App\">\n      <Nav isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />\n      <Switch location={location} key={location.pathname}>\n        <Route path=\"/\" exact >\n          <Home isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />\n        </Route>\n        <Route path=\"/read\" exact>\n          <Read isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />\n        </Route>\n        <Route path=\"/profile\" exact>\n          <Profile isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />\n        </Route>\n        <Route path=\"/login\" exact>\n          <Login isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />\n        </Route>\n        <Route path=\"/register\" exact>\n          <Register isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />\n        </Route>\n        <Route path=\"/createWrittenwork\" exact>\n          <CreateWrittenwork isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />\n        </Route>\n        <Route path=\"/resetpassword/:resettoken\" exact>\n          <Resetpassword isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />\n        </Route>\n        <Route path=\"/readwrittenwork/:id\" exact>\n          <ReadWrittenWork isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />\n        </Route>\n        <Route path=\"/editwrittenwork/:id\" exact>\n          <EditWrittenwork isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}